{"version":3,"sources":["containers/Calculator/Calculator.css","components/Header/Title/Title.css","components/Header/Header.css","index.css","components/Header/PhotoCells/PhotoCells.css","components/Display/Display.css","components/Buttons/Buttons.js","components/Display/Display.js","components/Header/PhotoCells/PhotoCells.js","components/Header/Title/Title.js","components/Header/Header.js","containers/Calculator/Calculator.js","serviceWorker.js","index.js","components/Buttons/Buttons.css"],"names":["module","exports","Calculator","Title","Header","root","PhotoCells","PhotoCell","CalcDisplay","MainDisplay","SecondaryDisplay","MemoryDisplay","ProcessDisplay","btnValues","btnIDs","buttons","_ref","handleCalculator","btnClasses","Object","values","classes","btnClassesSliced","slice","length","allBtn","map","btn","i","react_default","a","createElement","key","concat","id","className","Button","onClick","CalcKeyBoard","display","displayFormula","displayMemory","displayCurrent","photoCells","title","titleStyle","header","headerStyle","Title_Title","PhotoCells_PhotoCells","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","btnVal","target","textContent","_this$state","state","displayedElement","currentEl","formula","isOperator","undefined","setState","test","buildExpression","buildNumber","handleOperatorPress","newExpression","push","handleEqualityPress","isValidNumber","handleNumTransformOp","handleClearDisplays","newExpAfterOp","element","updatedExpression","digit","buildNumberHelper","isDotIncluded","includes","onlyOneDotCheck","number","nextChar","operand","console","log","getPercent","getSqrt","oldElement","newElement","getFraction","toString","clearMainDisplay","resetCalculator","clearMemory","expression","getResult","equalityPressed","memory","operator","exp","math","join","Number","value","_this$state2","result","Header_Header","Display_Display","Buttons_Buttons","Component","Boolean","window","location","hostname","match","ReactDOM","render","containers_Calculator_Calculator","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","Equals","Add","Subtract","Divide","Multiply","Decimal","Opp","Percent","Sqrt","Fraction","Clear","ClearAll","MemoryClear"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,WAAA,sDCAlBF,EAAAC,QAAA,CAAkBE,MAAA,4CCAlBH,EAAAC,QAAA,CAAkBG,OAAA,oFCAlBJ,EAAAC,QAAA,CAAkBI,KAAA,0CCAlBL,EAAAC,QAAA,CAAkBK,WAAA,gCAAAC,UAAA,oDCAlBP,EAAAC,QAAA,CAAkBO,YAAA,8BAAAC,YAAA,8BAAAC,iBAAA,mCAAAC,cAAA,gCAAAC,eAAA,mNCGZC,EAAY,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,IAAK,SAAK,KAC/C,IAAK,KAAM,MAExBC,EAAS,CAAC,OAAQ,MAAO,MAAO,QAAS,OAAQ,OAAQ,MAC/C,QAAS,QAAS,OAAQ,SAAU,MAAO,WAAY,SAAU,WAAY,UAAW,MACxF,UAAW,OAAQ,WAAY,QAAS,WAAY,gBA0BrDC,EAxBC,SAAAC,GAA0B,IAAvBC,EAAuBD,EAAvBC,iBACTC,EAAaC,OAAOC,OAAOC,KAC3BC,EAAmBJ,EAAWK,MAAM,EAAGL,EAAWM,QAClDC,EAASZ,EAAUa,IAAI,SAACC,EAAKC,GACnC,OACIC,EAAAC,EAAAC,cAAA,OACIC,IAAG,OAAAC,OAAWnB,EAAOc,IACrBM,GAAKpB,EAAOc,GACZO,UAAS,GAAAF,OAAOZ,IAAQe,OAAf,KAAAH,OAA2BX,EAAiBM,IACrDS,QAAUpB,GAERU,KAMV,OACGE,EAAAC,EAAAC,cAAA,OAAKI,UAAYd,IAAQiB,cACnBb,qBCREc,EAnBC,SAAAvB,GAAuD,IAApDwB,EAAoDxB,EAApDwB,eAAgBC,EAAoCzB,EAApCyB,cAAeC,EAAqB1B,EAArB0B,eAC9C,OACIb,EAAAC,EAAAC,cAAA,OAAKI,UAAYd,IAAQb,aACrBqB,EAAAC,EAAAC,cAAA,OAAKI,UAAYd,IAAQX,kBACrBmB,EAAAC,EAAAC,cAAA,OAAKI,UAAYd,IAAQV,eACnB8B,GAENZ,EAAAC,EAAAC,cAAA,OAAKI,UAAYd,IAAQT,gBACnB4B,IAGVX,EAAAC,EAAAC,cAAA,OAAKG,GAAG,UAAUC,UAAYd,IAAQZ,aAChCiC,sBCHHC,EAVI,kBACfd,EAAAC,EAAAC,cAAA,OAAKI,UAAYd,IAAQf,YACrBuB,EAAAC,EAAAC,cAAA,OAAKI,UAAYd,IAAQd,YACzBsB,EAAAC,EAAAC,cAAA,OAAKI,UAAYd,IAAQd,YACzBsB,EAAAC,EAAAC,cAAA,OAAKI,UAAYd,IAAQd,YACzBsB,EAAAC,EAAAC,cAAA,OAAKI,UAAYd,IAAQd,YACzBsB,EAAAC,EAAAC,cAAA,OAAKI,UAAYd,IAAQd,gCCJlBqC,EAFD,kBAAMf,EAAAC,EAAAC,cAAA,OAAKI,UAAYU,IAAW1C,OAA5B,uCCSL2C,EAPA,kBACXjB,EAAAC,EAAAC,cAAA,OAAKI,UAAYY,IAAY3C,QACzByB,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACkB,EAAD,QCsPO/C,cArPb,SAAAA,EAAYgD,GAAO,IAAAC,EAAA,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,KAAAnD,IACjBiD,EAAAhC,OAAAmC,EAAA,EAAAnC,CAAAkC,KAAAlC,OAAAoC,EAAA,EAAApC,CAAAjB,GAAAsD,KAAAH,KAAMH,KAURjC,iBAAmB,SAACwC,GAClB,IAAMC,EAASD,EAAEE,OAAOC,YADAC,EAEyBV,EAAKW,MAAnCC,EAFKF,EAEhBG,UAA6BC,EAFbJ,EAEaI,QAC/BC,EAAaf,EAAKe,WAAWR,GAEnC,YAAkBS,IAAXT,GAEL,KAAOP,EAAKe,WAAWH,IAAqBZ,EAAKe,WAAWR,GAC1DP,EAAKiB,SAAS,CACZJ,UAAWN,IAEb,MAEF,KAAMP,EAAKe,WAAWH,IAAqB,WAAWM,KAAKX,GACzDP,EAAKmB,gBAAgBZ,GACrB,MAEF,IAAM,WAAWW,KAAKX,IAAW,WAAWW,KAAKN,GAC/CZ,EAAKoB,YAAYb,GACjB,MAEF,KAAMQ,EACJf,EAAKqB,oBAAoBd,EAAQK,GACjC,MAEF,IAAM,IAAIM,KAAKX,GACb,IAAIe,EAAgBR,EACpBQ,EAAcC,KAAKX,GACnBZ,EAAKwB,oBAAoBF,GACzB,MAEF,KAAO,IAAIJ,KAAKX,IAAW,SAAIW,KAAKX,IAAW,KAAKW,KAAKX,IAAsB,QAAXA,IAC3DP,EAAKyB,cAAcb,GAC1BZ,EAAK0B,qBAAqBnB,GAC1B,MAEF,IAAM,MAAMW,KAAKX,IAAW,OAAOW,KAAKX,IAAW,OAAOW,KAAKX,GAC7DP,EAAK2B,oBAAoBpB,GACzB,MAEF,QACEP,EAAKiB,SAAS,CACZJ,UAAWN,MArDAP,EA0DnBmB,gBAAkB,SAAA3C,GAChB,IAAIoD,EAAgB5B,EAAKW,MAAMG,QAC5BtC,IAAQwB,EAAKW,MAAME,YACpBe,EAAcxD,MAAM,GAAI,GACxBwD,EAAcL,KAAKvB,EAAKW,MAAME,YAEhCb,EAAKiB,SAAS,CACZH,QAASc,EACTf,UAAWrC,KAlEIwB,EAsEnBqB,oBAAsB,SAAC7C,EAAKqD,GAC1B,IAAIC,EAAoB9B,EAAKW,MAAMG,QAC/BgB,EAAkBP,KAAKM,GACvB7B,EAAKiB,SAAS,CACZH,QAASgB,EACTjB,UAAWrC,KA3EAwB,EAgFnBoB,YAAc,SAAAW,GAAS,IACblB,EAAcb,EAAKW,MAAnBE,UAES,MAAdA,GAA+B,MAAVkB,EACtB/B,EAAKiB,SAAS,CACZJ,UAAWA,EAAYkB,IAIJ,MAAdlB,GAAqB,QAAQK,KAAKa,GACzC/B,EAAKiB,SAAS,CACZJ,UAAWkB,IAIO,MAAdlB,QAAmCG,IAAdH,GAC3Bb,EAAKgC,kBAAkBD,IAhGR/B,EAoGnBgC,kBAAoB,SAAAD,GAAS,IACnBlB,EAAcb,EAAKW,MAAnBE,UAEFoB,EAAgBpB,EAAUqB,SAAS,KAErCD,GAA2B,MAAVF,GAMZE,GAAiB,QAAQf,KAAKa,GACrC/B,EAAKiB,SAAS,CACZJ,UAAWA,EAAYkB,IAInBE,GAA2B,MAAVF,EACvB/B,EAAKiB,SAAS,CACZJ,UAAWA,IAIPoB,GAAiB,QAAQf,KAAKa,IACpC/B,EAAKiB,SAAS,CACZJ,UAAWA,EAAYkB,IAnBzB/B,EAAKiB,SAAS,CACZJ,UAAWA,EAAYkB,KA3GV/B,EAkInBmC,gBAAkB,SAACC,EAAQC,GAAT,OAAuBD,EAAOF,SAAS,MAAqB,MAAbG,EAAuCD,EAApBA,EAASC,GAlI1ErC,EAqInB0B,qBAAuB,SAAAY,GAAW,IACxBzB,EAAcb,EAAKW,MAAnBE,UAER,GADA0B,QAAQC,IAAIF,GACT,IAAIpB,KAAKoB,GACVtC,EAAKiB,SAAS,CACZJ,UAAWb,EAAKyC,WAAW5B,UAG1B,GAAI,SAAIK,KAAKoB,IACZzB,GAAa,EACfb,EAAKiB,SAAS,CACZJ,UAAWb,EAAK0C,QAAQ7B,KAG1Bb,EAAKiB,SAAS,CACZJ,UAAW,eAIZ,GAAG,KAAKK,KAAKoB,GAAU,CAC1B,IAAIK,EAAa9B,EACb+B,EAAa5C,EAAK6C,YAAYF,GAClC3C,EAAKiB,SAAS,CACZJ,UAAW+B,QAGK,QAAZN,GACNtC,EAAKiB,SAAS,CACZJ,YAAyB,EAAbA,GAAgBiC,cAjKf9C,EAsKnB2B,oBAAsB,SAAAnD,GACjB,MAAM0C,KAAK1C,GACZwB,EAAK+C,mBAEC,OAAO7B,KAAK1C,GAClBwB,EAAKgD,kBAEC,OAAO9B,KAAK1C,IAClBwB,EAAKiD,eA9KUjD,EAkLnBwB,oBAAsB,SAAA0B,GACpBlD,EAAKiB,SAAS,CACZJ,UAAWb,EAAKmD,UAAUD,GAAYJ,WACtCM,iBAAiB,EACjBC,OAAQrD,EAAKmD,UAAUD,GAAYJ,WACnChC,QAAS,MAvLMd,EA2LnB+C,iBAAmB,WACjB/C,EAAKiB,SAAS,CACZJ,UAAW,OA7LIb,EAkMnBgD,gBAAkB,WACdhD,EAAKiB,SAAS,CACZH,QAAS,GACTuC,OAAQ,GACRxC,UAAW,IACXuC,iBAAiB,EACjBE,SAAU,MAxMGtD,EA4MnBiD,YAAc,WACZjD,EAAKiB,SAAS,CACZoC,OAAQ,MA9MOrD,EAkNnBmD,UAAY,SAACI,GAAD,OAASC,OAAUD,EAAIE,KAAK,OAlNrBzD,EAoNnB6C,YAAc,SAAAT,GACZ,MAAc,MAAXA,GACO,EAAIsB,OAAOtB,IAASU,WAErB,OAxNQ9C,EA4NnB0C,QAAU,SAAAN,GAAM,OAAIoB,OAAUpB,GAAQU,YA5NnB9C,EA8NnByC,WAAa,SAAAL,GAAM,OAAKA,EAAS,KAAKU,YA9NnB9C,EAgOnByB,cAAgB,SAAAW,GAAM,MAAI,oCAAoClB,KAAKkB,IAhOhDpC,EAkOnBe,WAAa,SAAC4C,GAAD,MAAqB,MAAVA,GAA2B,MAAVA,GAA2B,MAAVA,GAA2B,MAAVA,GA/NzE3D,EAAKW,MAAQ,CACTG,QAAS,GACTuC,OAAQ,GACRxC,UAAW,IACXuC,iBAAiB,GAPJpD,wEAoOV,IAAA4D,EACwC1D,KAAKS,MAA5CG,EADD8C,EACC9C,QAASuC,EADVO,EACUP,OAAQxC,EADlB+C,EACkB/C,UAAWgD,EAD7BD,EAC6BC,OACpC,OACEnF,EAAAC,EAAAC,cAAA,OAAKI,UAAYd,IAAQnB,YACrB2B,EAAAC,EAAAC,cAACkF,EAAD,MACApF,EAAAC,EAAAC,cAACmF,EAAD,CACI1E,eAAiByB,EAAQzC,OAAS,EAAIyC,EAAQ2C,KAAK,KAAO,GAC1DnE,cAA2B,KAAX+D,EAAA,MAAAvE,OAAuBuE,GAAY,GACnD9D,eAAiBsB,EACjBgD,OAASA,IAEbnF,EAAAC,EAAAC,cAACoF,EAAD,CAASlG,iBAAmBoC,KAAKpC,2BAhPlBmG,aCILC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9F,EAAAC,EAAAC,cAAC6F,EAAD,MAAgBC,SAASC,eAAe,SD2HlD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCElInBpI,EAAAC,QAAA,CAAkBqC,aAAA,+BAAAF,OAAA,yBAAAiG,KAAA,uBAAAC,IAAA,sBAAAC,IAAA,sBAAAC,MAAA,wBAAAC,KAAA,uBAAAC,KAAA,uBAAAC,IAAA,sBAAAC,MAAA,wBAAAC,MAAA,wBAAAC,KAAA,uBAAAC,OAAA,yBAAAC,IAAA,sBAAAC,SAAA,2BAAAC,OAAA,yBAAAC,SAAA,2BAAAC,QAAA,0BAAAC,IAAA,sBAAAC,QAAA,0BAAAC,KAAA,uBAAAC,SAAA,2BAAAC,MAAA,wBAAAC,SAAA,2BAAAC,YAAA","file":"static/js/main.1a04de7c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calculator\":\"Calculator__Calculator__19LWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title__Title__3YD3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header__Header__oE2FH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"index__root__4PyOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhotoCells\":\"PhotoCells__PhotoCells__3fbRl\",\"PhotoCell\":\"PhotoCells__PhotoCell__37mY3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalcDisplay\":\"Display__CalcDisplay__1uZ2S\",\"MainDisplay\":\"Display__MainDisplay__3PP_b\",\"SecondaryDisplay\":\"Display__SecondaryDisplay__1HQsd\",\"MemoryDisplay\":\"Display__MemoryDisplay__Tje3X\",\"ProcessDisplay\":\"Display__ProcessDisplay__1Li3t\"};","import React from 'react';\nimport classes from './Buttons.css';\n//import './Buttons.css'\n\nconst btnValues = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n                   '=', '+', '-', '/', '*', '.', '+/-', '%', 'âˆš', 'FR',\n                   'C', 'CE', 'MC'];\n\nconst btnIDs = ['zero', 'one', 'two', 'three', 'four', 'five', 'six',\n                'seven', 'eight', 'nine', 'equals', 'add', 'subtract', 'divide', 'multiply', 'decimal', 'opp',\n                'percent', 'sqrt', 'fraction' ,'clear', 'clearAll', 'memory-clear'];\n\nconst buttons = ({ handleCalculator }) => {\n    const btnClasses = Object.values(classes);\n    const btnClassesSliced = btnClasses.slice(2, btnClasses.length);\n    const allBtn = btnValues.map((btn, i) => {\n    return (\n        <div \n            key={ `Btn-${ btnIDs[i] }` } \n            id={ btnIDs[i] }\n            className={ `${ classes.Button } ${ btnClassesSliced[i] }` }\n            onClick={ handleCalculator }\n            >\n            { btn }\n        </div>\n    )\n    }\n                   \n                    )\n    return (\n       <div className={ classes.CalcKeyBoard }>\n           { allBtn }\n       </div>\n    )\n}\n\nexport default buttons;","import React from 'react';\nimport classes from './Display.css';\n\n\nconst display = ({ displayFormula, displayMemory, displayCurrent }) => {\n    return (\n        <div className={ classes.CalcDisplay }>\n            <div className={ classes.SecondaryDisplay }>\n                <div className={ classes.MemoryDisplay }>\n                    { displayMemory }\n                </div>\n                <div className={ classes.ProcessDisplay }>\n                    { displayFormula }\n                </div>\n            </div>\n            <div id=\"display\" className={ classes.MainDisplay }>\n                { displayCurrent }\n            </div>\n        </div>\n    )\n    \n}\n\nexport default display;","import React from 'react';\nimport classes from './PhotoCells.css';\n\nconst photoCells = () => \n    <div className={ classes.PhotoCells }>\n        <div className={ classes.PhotoCell }></div>\n        <div className={ classes.PhotoCell }></div>\n        <div className={ classes.PhotoCell }></div>\n        <div className={ classes.PhotoCell }></div>\n        <div className={ classes.PhotoCell }></div>\n    </div>\n\n\nexport default photoCells;","import React from 'react';\nimport titleStyle from './Title.css';\n\nconst title = () => <div className={ titleStyle.Title }>React Calculator</div>\n\nexport default title;","import React from 'react';\nimport PhotoCells from '../Header/PhotoCells/PhotoCells';\nimport Title from '../Header/Title/Title';\nimport headerStyle from './Header.css';\n\nconst header = () => (\n    <div className={ headerStyle.Header }>\n        <Title />\n        <PhotoCells />\n    </div>\n)\n\nexport default header;","import React, { Component } from 'react';\nimport * as math from 'mathjs';\nimport classes from './Calculator.css';\nimport Buttons from '../../components/Buttons/Buttons';\nimport Display from '../../components/Display/Display';\nimport Header from '../../components/Header/Header';\n\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        formula: [],\n        memory: '',\n        currentEl: '0',\n        equalityPressed: false\n    }\n  }\n\n  handleCalculator = (e) => {\n    const btnVal = e.target.textContent;\n    const { currentEl: displayedElement, formula } = this.state;\n    const isOperator = this.isOperator(btnVal);\n\n    switch(btnVal !== undefined) {\n\n      case ((this.isOperator(displayedElement) && this.isOperator(btnVal))):\n        this.setState({\n          currentEl: btnVal\n        })\n        break;\n\n      case (this.isOperator(displayedElement) && /\\.|[0-9]/.test(btnVal)):\n        this.buildExpression(btnVal);\n        break;\n\n      case (/\\.|[0-9]/.test(btnVal) && /\\.|[0-9]/.test(displayedElement)):\n        this.buildNumber(btnVal);\n        break;\n\n      case (isOperator):\n        this.handleOperatorPress(btnVal, displayedElement);\n        break;\n    \n      case (/=/.test(btnVal)):\n        let newExpression = formula;\n        newExpression.push(displayedElement);\n        this.handleEqualityPress(newExpression);\n        break;\n      \n      case ((/%/.test(btnVal) || /âˆš/.test(btnVal) || /FR/.test(btnVal) || btnVal === '+/-') \n            && this.isValidNumber(displayedElement)):\n        this.handleNumTransformOp(btnVal);\n        break;\n       \n      case (/^C$/.test(btnVal) || /^CE$/.test(btnVal) || /^MC$/.test(btnVal)):\n        this.handleClearDisplays(btnVal);\n        break;\n\n      default: \n        this.setState({\n          currentEl: btnVal\n        })\n    }\n  }\n\n  buildExpression = btn => {\n    let newExpAfterOp = this.state.formula;\n    if(btn !== this.state.currentEl) {\n      newExpAfterOp.slice(0, -1);\n      newExpAfterOp.push(this.state.currentEl);\n    }\n    this.setState({\n      formula: newExpAfterOp,\n      currentEl: btn\n    });\n  }\n\n  handleOperatorPress = (btn, element) => {\n    let updatedExpression = this.state.formula;\n        updatedExpression.push(element);\n        this.setState({\n          formula: updatedExpression,\n          currentEl: btn\n        })\n  }\n\n\n  buildNumber = digit => {\n    const { currentEl } = this.state; \n    \n    if(currentEl === '0' && digit === '.') {\n      this.setState({\n        currentEl: currentEl + digit\n      })\n    }\n\n    else if (currentEl === '0' && /[0-9]/.test(digit)) {\n      this.setState({\n        currentEl: digit\n      })\n    }\n\n    else if(currentEl !== '0' && currentEl !== undefined) {\n      this.buildNumberHelper(digit);\n    }\n  }\n\n  buildNumberHelper = digit => {\n    const { currentEl } = this.state;\n\n    const isDotIncluded = currentEl.includes('.');\n\n    if(!isDotIncluded && digit === '.') {\n      this.setState({\n        currentEl: currentEl + digit\n      })\n    } \n\n    else if(!isDotIncluded && /[0-9]/.test(digit)) {\n      this.setState({\n        currentEl: currentEl + digit\n      })\n    }\n\n    else if(isDotIncluded && digit === '.') {\n      this.setState({\n        currentEl: currentEl\n      })\n    }\n\n    else if(isDotIncluded && /[0-9]/.test(digit)) {\n      this.setState({\n        currentEl: currentEl + digit\n      })\n    }\n  }\n\n  onlyOneDotCheck = (number, nextChar) => !number.includes('.') && nextChar === '.' ? number + nextChar : number;\n\n\n  handleNumTransformOp = operand => {\n    const { currentEl } = this.state;\n    console.log(operand);\n    if(/%/.test(operand)) {\n      this.setState({\n        currentEl: this.getPercent(currentEl)\n      })\n    } \n    else if (/âˆš/.test(operand)) {\n      if(+currentEl >= 0) {\n        this.setState({\n          currentEl: this.getSqrt(currentEl)\n        })\n      } else {\n        this.setState({\n          currentEl: 'ERROR'\n        })\n      }\n    }\n    else if(/FR/.test(operand)) {\n      let oldElement = currentEl;\n      let newElement = this.getFraction(oldElement);\n      this.setState({\n        currentEl: newElement\n      })\n    }\n    else if(operand === '+/-') {\n      this.setState({\n        currentEl: (currentEl * -1).toString()\n      });\n    }\n  }\n\n  handleClearDisplays = btn => {\n    if(/^C$/.test(btn)) {\n      this.clearMainDisplay();\n    }\n    else if(/^CE$/.test(btn)) {\n      this.resetCalculator();\n    }\n    else if(/^MC$/.test(btn)) {\n      this.clearMemory();\n    }\n  }\n\n  handleEqualityPress = expression => {\n    this.setState({\n      currentEl: this.getResult(expression).toString(),\n      equalityPressed: true,\n      memory: this.getResult(expression).toString(),\n      formula: []\n    });\n  }\n\n  clearMainDisplay = () => {\n    this.setState({\n      currentEl: '0'\n    })\n  }\n\n\n  resetCalculator = () => {\n      this.setState({\n        formula: [],\n        memory: '',\n        currentEl: '0',\n        equalityPressed: false,\n        operator: ''\n      })\n  }\n\n  clearMemory = () => {\n    this.setState({\n      memory: ''\n    })\n  }\n\n  getResult = (exp) => math.eval(exp.join(' '));\n\n  getFraction = number => {\n    if(number !== '0') {\n      return (1 / Number(number)).toString();\n    } else {\n      return 'NaN'\n    }\n  }\n\n  getSqrt = number => math.sqrt(number).toString();\n\n  getPercent = number => (number / 100).toString();\n\n  isValidNumber = number => /^[+-.]?[0-9]{1,}(?:\\.[0-9]{1,})?$/.test(number);\n\n  isOperator = (value) => value === '+' || value === '-' || value === '/' || value === '*';\n\n  render() {\n    const { formula, memory, currentEl, result } = this.state;\n    return (\n      <div className={ classes.Calculator }>\n          <Header />\n          <Display \n              displayFormula={ formula.length > 0 ? formula.join(' ') : '' } \n              displayMemory={ memory !== '' ? `M: ${ memory }` : '' } \n              displayCurrent={ currentEl } \n              result={ result }\n          />\n          <Buttons handleCalculator={ this.handleCalculator } />\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './containers/Calculator/Calculator';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalcKeyBoard\":\"Buttons__CalcKeyBoard__34ukh\",\"Button\":\"Buttons__Button__3XAKX\",\"Zero\":\"Buttons__Zero__2qUB1\",\"One\":\"Buttons__One__11BsW\",\"Two\":\"Buttons__Two__2NwXs\",\"Three\":\"Buttons__Three__pLGMh\",\"Four\":\"Buttons__Four__3MTP3\",\"Five\":\"Buttons__Five__5s6U4\",\"Six\":\"Buttons__Six__1-9ig\",\"Seven\":\"Buttons__Seven__2fuZf\",\"Eight\":\"Buttons__Eight__Hf_ZP\",\"Nine\":\"Buttons__Nine__2bAV8\",\"Equals\":\"Buttons__Equals__db7a9\",\"Add\":\"Buttons__Add__1brJm\",\"Subtract\":\"Buttons__Subtract__3osXO\",\"Divide\":\"Buttons__Divide__13e94\",\"Multiply\":\"Buttons__Multiply__9qN0b\",\"Decimal\":\"Buttons__Decimal__240eW\",\"Opp\":\"Buttons__Opp__2Yv8L\",\"Percent\":\"Buttons__Percent__1IDck\",\"Sqrt\":\"Buttons__Sqrt__3ou_F\",\"Fraction\":\"Buttons__Fraction__36Fg6\",\"Clear\":\"Buttons__Clear__2l1Ea\",\"ClearAll\":\"Buttons__ClearAll__D8BMR\",\"MemoryClear\":\"Buttons__MemoryClear__2Plly\"};"],"sourceRoot":""}